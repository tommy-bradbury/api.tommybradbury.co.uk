name: PHP Lambda CI Deployment

on:
  push:
    branches:
      - master

env:
  PULUMI_STACK_NAME: prod
  ARTIFACT_BUCKET: api.tommybradbury.co.uk
  PULUMI_CD_REPO: tommy-bradbury/api.tommybradbury.co.uk-infrastructure

jobs:
  deploy:
    runs-on: ubuntu-latest

    outputs:
      current_commit_sha: ${{ steps.prep.outputs.sha_short }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Setup PHP (required for Bref/Composer)
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4' # Must match your Bref layer version
          extensions: 'simplexml, json, mbstring, zip'
          coverage: none

      - name: Install Composer Dependencies (if using shared code)
        run: composer require bref/bref && composer install --prefer-dist --no-dev

      - name: Prepare Lambda Deployment Packages
        run: |
          mkdir -p ./.build/auth
          cp src/auth/index.php .build/auth/
          cp src/auth/login.php .build/auth/
          cp src/auth/logout.php .build/auth/
          cp -r vendor .build/auth/
          cd .build/auth/ && zip -r ../../auth.zip .

      - name: Upload auth Artifact to S3
        id: upload_auth
        run: |
          # Upload them to the versioned S3 ting
          S3_KEY="${{ steps.prep.outputs.sha_short }}/auth.zip"
          aws s3 cp auth.zip s3://${{ env.ARTIFACT_BUCKET }}/$S3_KEY
          echo "s3_key=$S3_KEY" >> $GITHUB_OUTPUT

      - name: Trigger CD Pipeline in api.tommybradbury.co.uk-infrastructure
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.CD_PAT }} # Uses the token defined in your secrets
          repository: ${{ env.PULUMI_CD_REPO }}
          event-type: new-artifact-available
          client-payload: '{
            "aws_region": "${{ env.AWS_REGION }}",
            "artifact_bucket": "${{ env.ARTIFACT_BUCKET }}",
            "meme_key": "${{ steps.upload_auth.outputs.s3_key }}",
            "ref": "${{ github.ref }}",
            "sha": "${{ github.sha }}"
          }'